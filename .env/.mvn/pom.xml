<?xml version="1.0" encoding="UTF-8"?>
<!-- required: <project, modelVersion, groupId, artifactId, version> -->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
  <!-- project object model supported version -->
  <modelVersion>4.0.0</modelVersion>
  <!-- information -->
  <name>minetime</name>
  <description>
    minecraft paper-server-plugin to let admins with specific permissions
    to check online time of a player
  </description>
  <developers>
    <developer>
      <name>NickodimCherepanov</name>
      <organization>NyteCode</organization>
    </developer>
    <developer>
      <name>Tanwar</name>
      <organization>Jacksa</organization>
    </developer>
  </developers>
  <licenses>
      <license>
        <name>freedom</name>
        <url>http://www.whatever</url>
    </license>
  </licenses>
  <url>http://github.com/nikochir/minecode</url>
  <!-- project -->
  <groupId>nikochir</groupId>
  <artifactId>minetime</artifactId>
  <version>001</version>
  <packaging>jar</packaging>
  <properties>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
	  <!-- where to get artifacts -->
  <repositories>
		<!-- minecraft -->
    <repository>
      <id>spigot-repo</id>
      <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>
    </repository>
    <repository>
      <id>papermc-repo</id>
      <url>https://papermc.io/repo/repository/maven-public/</url>
    </repository>
		<!-- database -->
    <!--repository>
      <id>mongodb</id>
      <url>https://.mvnrepository.com/artifact/org.mongodb</url>
      <name>repodata</name>
    </repository-->
		<!-- logging -->
    <repository>
      <id>slf4j</id>
      <url>https://.mvnrepository.com/artifact/org.slf4j</url>
    </repository>
  </repositories>
  <!-- what artifacts to use -->
  <dependencies>
    <!-- native -->
    <!-- minecraft -->
    <dependency>
      <groupId>org.spigotmc</groupId>
      <artifactId>spigot-api</artifactId>
      <version>1.16.5-R0.1-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.destroystokyo.paper</groupId>
      <artifactId>paper-api</artifactId>
      <version>1.16.5-R0.1-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>
    <!-- database -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-sync</artifactId>
      <version>4.3.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>bson</artifactId>
      <version>4.2.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.9</version>
    </dependency>
  </dependencies>
  <!-- resulting target configuration -->
  <build>
		<!-- where to place and how to name the target -->
    <finalName>${project.artifactId}</finalName>
		<directory>${project.basedir}/../../bin/jav</directory>
		<sourceDirectory>${project.basedir}/../../src/jav/main</sourceDirectory>
    <outputDirectory>${project.basedir}/../../bin/jav/main</outputDirectory>
    <testSourceDirectory>{project.basedir}/../../src/jav/test</testSourceDirectory>
    <testOutputDirectory>${project.basedir}/../../bin/jav/test</testOutputDirectory>
    <scriptSourceDirectory>${project.basedir}/../../src/jav/main</scriptSourceDirectory>
		<!-- objects are to be places in the .jar root (not compile, but use) -->
		<resources>
      <resource>
        <directory>${project.basedir}/../../rsc/main</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
		<testResources>
      <testResource>
        <directory>${project.basedir}/../../rsc/test</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <!-- lock down plugins versions to avoid using maven defaults -->
		<pluginManagement>
      <plugins>
        <!-- -->
    	  <plugin>
    	    <groupId>org.apache.maven.plugins</groupId>
    	    <artifactId>maven-compiler-plugin</artifactId>
    	    <version>3.8.1</version>
    	    <configuration>
    	      <source>${java.version}</source>
    	      <target>${java.version}</target>
    	    </configuration>
    	  </plugin>
				<!-- -->
    	  <plugin>
    	    <groupId>org.apache.maven.plugins</groupId>
    	    <artifactId>maven-shade-plugin</artifactId>
    	    <version>3.2.4</version>
    	    <executions>
    	      <execution>
    	        <phase>package</phase>
    	        <goals>
    	          <goal>shade</goal>
    	        </goals>
    	        <configuration>
    	          <createDependencyReducedPom>false</createDependencyReducedPom>
    	        </configuration>
    	      </execution>
    	    </executions>
    	  </plugin>
    	  <!-- -->
        <!--plugin>
    	    <groupId>org.apache.maven.plugins</groupId>
    	    <artifactId>maven-assembly-plugin</artifactId>
    	    <version>2.5.3</version>
          <configurations>
            <configuration>
              <descriotRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriotRefs>
            </configuration>
          </configurations>
          <executions>
            <execution>
              <id>assemble-all</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
    	  </plugin-->
        <!-- to copy all deps automatically -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.9</version>
          <executions>
            <execution>
              <id>copy-dependencies</id>
              <phase>install</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>{project.build.directory}/lib</outputDirectory>
                <overWriteReleases>false</overWriteReleases>
                <overWriteSnapshots>false</overWriteSnapshots>
                <overWriteIfNewer>true</overWriteIfNewer>
              </configuration>
            </execution>
          </executions>
        </plugin>
    	</plugins>
		</pluginManagement>
  </build>
</project>
<!-- endfile -->